--fast forwarding uses same hash id to merge from all branches, so we use no ff to generate unique hash id for 
  merging new branches to master branch to any other branches

[Sender pint of view]
-Suppose you have created a new file in the project say description.txt
-Create a new branch day doc
  $ git branch doc
  $ git checkout doc // it takes us to doc branch
-Add content in doc.txt
  "This is docs for program
  You can enter Name, Address
  and country"
-$ git status-- It shows that there is a modification in the project
-Add
  $ git add .//add to staging area
-$ git diff --staged
   Difference is shown i.e the new file added is shown
-Commit: $ git commit -m "Doc added"
-$ git log --oneline
   The hash of Doc Added commit is shown (say 2bfd20f)
    
-goto master: $ git checkout master
-Now  merge: $ git merge --no-ff doc (No fast forward)
-Now you can write your own message as
  "Merge branch doc to master branch"
-Now press :wq - it writes and quits the program.

-$ git log --oneline
  You can see new hash value of merged doc file

-To see which branch is merged:
  $ git branch -- mergerd

-To see which branch in um=nmergerd
  $ git branch --no-mergerd
********************************************

*To send the branch in remote repository i.e in github

-goto branch which you want to send to remote repository
-$ git checkout doc //takes us to doc branch
-$ git push origin doc : A new branch is created on the repository i.e github
-To see the list of branches
  $ git remote show origin //dislays all the branches present in the repository

***********************************************

